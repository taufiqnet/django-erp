# Generated by Django 5.1.3 on 2025-05-08 12:22

import core.models
import django.db.models.deletion
import shortuuid.django_fields
import taggit.managers
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', editable=False, length=10, max_length=30, prefix='brn', unique=True)),
                ('business_type', models.CharField(choices=[('beauty', 'Beauty'), ('food', 'Food & Beverage')], default='food', max_length=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='brand')),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('cod', 'Cash on Delivery'), ('bkash', 'bKash'), ('card', 'Pay with Card/Mobile Wallet')], max_length=50, unique=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('charge', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Example: Piece', max_length=100, unique=True)),
                ('short_title', models.CharField(help_text='Example: Pc(s)', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100, null=True)),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_number', models.CharField(default=core.models.generate_order_number, max_length=20, unique=True)),
                ('items_count', models.PositiveIntegerField(default=0, editable=False)),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('shipping_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('paid_status', models.BooleanField(default=False)),
                ('product_status', models.CharField(choices=[('in_review', 'In Review'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Payment Failed'), ('on_hold', 'On Hold'), ('returned', 'Returned')], default='in_review', max_length=15)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('delivery_method', models.CharField(choices=[('inside_dhaka', 'Inside Dhaka'), ('outside_dhaka', 'Outside Dhaka')], default='inside_dhaka', max_length=100)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_notes', models.TextField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('updated_by', models.ForeignKey(blank=True, editable=False, help_text='This field is automatically set to the logged-in user.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_orders', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.paymentmethod')),
            ],
            options={
                'verbose_name_plural': 'Cart Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='CartOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(default=core.models.generate_order_number, max_length=200, unique=True)),
                ('product_status', models.CharField(choices=[('in_review', 'In Review'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Payment Failed'), ('on_hold', 'On Hold'), ('returned', 'Returned')], default='in_review', max_length=15)),
                ('item', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=200)),
                ('qty', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cartorder')),
            ],
            options={
                'verbose_name_plural': 'Cart Order Items',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', editable=False, length=10, max_length=30, prefix='cat', unique=True)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('business_type', models.CharField(choices=[('beauty', 'Beauty'), ('food', 'Food & Beverage')], default='food', max_length=10)),
                ('slug', models.SlugField(blank=True, help_text='This will generate automatically', max_length=100, unique=True)),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='category')),
                ('icon', models.ImageField(blank=True, default='default.jpg', help_text='Select icon for navigation menu in homepage', null=True, upload_to='category', verbose_name='Navigation Menu Icon')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='core.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', editable=False, length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('title_bn', models.CharField(blank=True, help_text='Use Unicode characters for bengali', max_length=100, null=True, verbose_name='Title (Bengali)')),
                ('slug', models.SlugField(blank=True, help_text='Slug will be generated automatically', max_length=100, unique=True)),
                ('image', models.ImageField(default='default.jpg', upload_to=core.models.product_directory_path)),
                ('page_description', models.TextField(blank=True, help_text='Website Page Description for seo purposes, maximum 150 characters', max_length=200, null=True)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('business_type', models.CharField(choices=[('beauty', 'Beauty'), ('food', 'Food & Beverage')], default='food', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='MRP')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True)),
                ('specifications', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_count', models.CharField(blank=True, default='10', max_length=100, null=True)),
                ('life', models.CharField(blank=True, default='100 Days', max_length=100, null=True)),
                ('mfd', models.DateTimeField(blank=True, null=True)),
                ('product_status', models.CharField(choices=[('draft', 'Draft'), ('disabled', 'Disabled'), ('rejected', 'Rejected'), ('in_review', 'In Review'), ('published', 'Published')], default='published', max_length=10)),
                ('status', models.BooleanField(default=True)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('digital', models.BooleanField(default=False)),
                ('best_selling', models.BooleanField(default=False)),
                ('free_delivery', models.BooleanField(default=False)),
                ('sold_count', models.CharField(blank=True, help_text='This field is automatically set.', max_length=100, null=True)),
                ('review_star', models.CharField(blank=True, help_text='This field is automatically set. After collecting original review by customer this field will be ignored.', max_length=100, null=True)),
                ('review_count', models.CharField(blank=True, help_text='This field is automatically set. After collecting original review by customer this field will be ignored.', max_length=100, null=True)),
                ('sku', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', help_text='This field is automatically set.', length=4, max_length=20, prefix='sku', unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(blank=True, editable=False, help_text='This field is automatically set to the logged-in user.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(blank=True, help_text='Unit must be in Peice, product title contains unit name', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.unit')),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.jpg', upload_to=core.models.product_image_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_images', to='core.product')),
            ],
            options={
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='core.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Product Reviews',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer Name')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('order_note', models.TextField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.cartorder')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', editable=False, length=10, max_length=20, prefix='ven', unique=True)),
                ('business_type', models.CharField(choices=[('beauty', 'Beauty'), ('food', 'Food & Beverage')], default='food', max_length=10)),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to=core.models.user_directory_path)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, default='123 Main Street', max_length=100)),
                ('contact', models.CharField(blank=True, default='+123 (456) 789', max_length=100)),
                ('chat_resp_time', models.PositiveIntegerField(default=100)),
                ('shipping_on_time', models.PositiveIntegerField(default=100)),
                ('authentic_rating', models.PositiveIntegerField(default=100)),
                ('days_return', models.PositiveIntegerField(default=100)),
                ('warranty_period', models.PositiveIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, editable=False, help_text='This field is automatically set to the logged-in user.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Vendors',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.vendor'),
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Wishlists',
            },
        ),
    ]
