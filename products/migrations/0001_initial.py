# Generated by Django 5.1.3 on 2025-05-08 12:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('contact', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='business.business')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Unit Name')),
                ('abbreviation', models.CharField(max_length=10, unique=True, verbose_name='Abbreviation')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='business.business')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(editable=False, help_text='Stock Keeping Unit', max_length=50, unique=True, verbose_name='SKU')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='MRP')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost Price')),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.PositiveIntegerField(default=10)),
                ('is_out_of_stock', models.BooleanField(default=False)),
                ('barcode', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('upc', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='business.business')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.category')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, help_text='The supplier of this product.', limit_choices_to={'type': 'supplier'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplied_products', to='contact.contact', verbose_name='Supplier')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_products', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(blank=True, help_text='The unit in which the product is measured (e.g., kg, piece, liter).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.unit', verbose_name='Unit of Measurement')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The name of the variation (e.g., 'Red', 'Large').", max_length=255, verbose_name='Variation Name')),
                ('sku', models.CharField(editable=False, max_length=50, unique=True, verbose_name='Stock Keeping Unit')),
                ('price', models.DecimalField(decimal_places=2, help_text='The price of this specific variation.', max_digits=10, verbose_name='Price')),
                ('cost_price', models.DecimalField(decimal_places=2, help_text='The cost price of this specific variation.', max_digits=10, verbose_name='Cost Price')),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Original Price')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='The available stock quantity for this variation.', verbose_name='Stock Quantity')),
                ('low_stock_threshold', models.PositiveIntegerField(default=10, help_text='The threshold at which the stock is considered low.', verbose_name='Low Stock Threshold')),
                ('is_out_of_stock', models.BooleanField(default=False, help_text='Indicates if this variation is out of stock.', verbose_name='Out of Stock')),
                ('barcode', models.CharField(blank=True, editable=False, help_text='The barcode for this specific variation.', max_length=100, null=True, verbose_name='Barcode')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='The weight of this specific variation.', max_digits=10, null=True, verbose_name='Weight')),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='The height of this specific variation.', max_digits=10, null=True, verbose_name='Height')),
                ('width', models.DecimalField(blank=True, decimal_places=2, help_text='The width of this specific variation.', max_digits=10, null=True, verbose_name='Width')),
                ('length', models.DecimalField(blank=True, decimal_places=2, help_text='The length of this specific variation.', max_digits=10, null=True, verbose_name='Length')),
                ('image', models.ImageField(blank=True, help_text='An image of this specific variation.', null=True, upload_to='product_variations/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this variation is active and available for sale.', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_variant_products', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(help_text='The parent product this variation belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='products.product', verbose_name='Parent Product')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_variant_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Variation',
                'verbose_name_plural': 'Product Variations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['sku'], name='variation_idx_sku'), models.Index(fields=['product'], name='variation_idx_product'), models.Index(fields=['name'], name='variation_idx_name'), models.Index(fields=['created_at'], name='variation_idx_created_at'), models.Index(fields=['updated_at'], name='variation_idx_updated_at')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='product_idx_sku'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['upc'], name='product_idx_upc'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['business'], name='product_idx_business'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='product_idx_name'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='product_idx_created_at'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['updated_at'], name='product_idx_updated_at'),
        ),
    ]
