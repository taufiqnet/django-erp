# Generated by Django 5.1.3 on 2025-05-08 12:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('phone', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Gender')),
                ('address', models.TextField(verbose_name='Address')),
                ('doctor_id', models.CharField(max_length=20, unique=True, verbose_name='Doctor ID')),
                ('license_number', models.CharField(max_length=50, unique=True, verbose_name='Medical License Number')),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='National ID')),
                ('specialization', models.CharField(choices=[('general', 'General Practitioner'), ('cardiology', 'Cardiology'), ('neurology', 'Neurology'), ('orthopedics', 'Orthopedics'), ('pediatrics', 'Pediatrics'), ('dermatology', 'Dermatology'), ('psychiatry', 'Psychiatry'), ('surgery', 'Surgery'), ('gynecology', 'Gynecology'), ('ophthalmology', 'Ophthalmology'), ('ent', 'ENT Specialist'), ('dentistry', 'Dentistry'), ('other', 'Other Specialty')], max_length=50, verbose_name='Specialization')),
                ('other_specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Other Specialization (if selected)')),
                ('years_of_experience', models.PositiveIntegerField(verbose_name='Years of Experience')),
                ('qualifications', models.TextField(verbose_name='Qualifications (Degrees, Certifications)')),
                ('hospital_name', models.CharField(max_length=200, verbose_name='Hospital/Clinic Name')),
                ('department', models.CharField(max_length=100, verbose_name='Department')),
                ('designation', models.CharField(max_length=100, verbose_name='Designation')),
                ('working_hours', models.CharField(max_length=100, verbose_name='Working Hours')),
                ('available_days', models.CharField(max_length=100, verbose_name='Available Days')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(max_length=15, verbose_name='Emergency Contact Phone')),
                ('relationship_to_doctor', models.CharField(max_length=50, verbose_name='Relationship to Doctor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified Status')),
                ('joining_date', models.DateField(blank=True, null=True, verbose_name='Joining Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL, verbose_name='System User Account')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'indexes': [models.Index(fields=['doctor_id'], name='doctor_idx_doctor_id'), models.Index(fields=['email'], name='doctor_idx_email'), models.Index(fields=['phone'], name='doctor_idx_phone'), models.Index(fields=['specialization'], name='doctor_idx_specialization')],
            },
        ),
    ]
