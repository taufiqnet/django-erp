# Generated by Django 5.1.3 on 2025-05-08 12:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('contact', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retail_categories', to='business.business')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='retail.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('business', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, max_length=160, null=True)),
                ('sku', models.CharField(editable=False, max_length=50, unique=True, verbose_name='SKU')),
                ('upc', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='UPC/EAN')),
                ('barcode', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('type', models.CharField(choices=[('simple', 'Simple Product'), ('variable', 'Variable Product'), ('composite', 'Composite Product')], default='simple', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_type', models.CharField(choices=[('exempt', 'Tax Exempt'), ('standard', 'Standard Rate'), ('reduced', 'Reduced Rate'), ('zero', 'Zero Rate')], default='standard', max_length=20)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('stock_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=12)),
                ('low_stock_threshold', models.PositiveIntegerField(default=10)),
                ('manage_stock', models.BooleanField(default=True)),
                ('stock_status', models.CharField(choices=[('in_stock', 'In Stock'), ('out_of_stock', 'Out of Stock'), ('backorder', 'Available on Backorder')], default='in_stock', max_length=20)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requires_shipping', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('gallery', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_bestseller', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retail_products', to='business.business')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='retail.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products_retail', to=settings.AUTH_USER_MODEL)),
                ('related_products', models.ManyToManyField(blank=True, to='retail.product')),
                ('supplier', models.ForeignKey(blank=True, limit_choices_to={'type': 'supplier'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contact.contact')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_products_retail', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='completed', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('mobile', 'Mobile Payment'), ('bank', 'Bank Transfer'), ('credit', 'Customer Credit'), ('mixed', 'Mixed Payment')], default='cash', max_length=20)),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('partial', 'Partially Paid'), ('unpaid', 'Unpaid'), ('refunded', 'Refunded'), ('failed', 'Failed')], default='paid', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('balance_due', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=12)),
                ('is_due', models.BooleanField(default=False)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('shipping_address', models.JSONField(blank=True, null=True)),
                ('shipping_method', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_note', models.TextField(blank=True, null=True)),
                ('staff_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='business.business')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_sales', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='contact.contact', verbose_name='Customer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('mobile', 'Mobile Payment'), ('bank', 'Bank Transfer'), ('credit', 'Customer Credit'), ('mixed', 'Mixed Payment')], max_length=20)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='retail.sale')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, default=1, max_digits=12, validators=[django.core.validators.MinValueValidator(0.001)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('subtotal', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('returned_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sale_items', to='retail.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='retail.sale')),
            ],
            options={
                'verbose_name': 'Sale Item',
                'verbose_name_plural': 'Sale Items',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Unit Name')),
                ('abbreviation', models.CharField(max_length=10, verbose_name='Abbreviation')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retail_units', to='business.business')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='retail.unit'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['invoice_number'], name='retail_sale_invoice_0a3e2b_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['business', 'date'], name='retail_sale_busines_564882_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['customer'], name='retail_sale_custome_1d1db7_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['payment_status'], name='retail_sale_payment_fa2d30_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['status'], name='retail_sale_status_1d613b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='unit',
            unique_together={('business', 'name')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='retail_prod_sku_983fcc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['upc'], name='retail_prod_upc_812da7_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='retail_prod_name_2405bc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['business', 'is_active'], name='retail_prod_busines_bb279e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='retail_prod_categor_5f4071_idx'),
        ),
    ]
